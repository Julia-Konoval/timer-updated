[{"/Users/user/Desktop/timer/src/index.js":"1","/Users/user/Desktop/timer/src/components/App.js":"2","/Users/user/Desktop/timer/src/components/PrivateRoute.js":"3","/Users/user/Desktop/timer/src/components/StopWatch.js":"4","/Users/user/Desktop/timer/src/contexts/AuthContext.js":"5","/Users/user/Desktop/timer/src/components/login/LoginHome.js":"6","/Users/user/Desktop/timer/src/firebase.js":"7","/Users/user/Desktop/timer/src/components/login/Login.js":"8","/Users/user/Desktop/timer/src/components/login/Register.js":"9","/Users/user/Desktop/timer/src/hooks/useTimer.js":"10","/Users/user/Desktop/timer/src/components/Home.js":"11","/Users/user/Desktop/timer/src/components/Stopwatch.js":"12"},{"size":212,"mtime":1607787774000,"results":"13","hashOfConfig":"14"},{"size":585,"mtime":1607863209806,"results":"15","hashOfConfig":"14"},{"size":412,"mtime":1607863209829,"results":"16","hashOfConfig":"14"},{"size":1302,"mtime":1607790130966,"results":"17","hashOfConfig":"14"},{"size":1293,"mtime":1607862806590,"results":"18","hashOfConfig":"14"},{"size":1305,"mtime":1607863209840,"results":"19","hashOfConfig":"14"},{"size":634,"mtime":1607855315210,"results":"20","hashOfConfig":"14"},{"size":1468,"mtime":1607863209840,"results":"21","hashOfConfig":"14"},{"size":2567,"mtime":1607863209842,"results":"22","hashOfConfig":"14"},{"size":1103,"mtime":1607790115882,"results":"23","hashOfConfig":"14"},{"size":1882,"mtime":1607863683173,"results":"24","hashOfConfig":"14"},{"size":1549,"mtime":1607863209838,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"rbwjan",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/user/Desktop/timer/src/index.js",[],["54","55"],"/Users/user/Desktop/timer/src/components/App.js",[],"/Users/user/Desktop/timer/src/components/PrivateRoute.js",[],"/Users/user/Desktop/timer/src/components/StopWatch.js",["56","57","58","59"],"/Users/user/Desktop/timer/src/contexts/AuthContext.js",[],"/Users/user/Desktop/timer/src/components/login/LoginHome.js",[],"/Users/user/Desktop/timer/src/firebase.js",[],"/Users/user/Desktop/timer/src/components/login/Login.js",["60","61","62"],"import React, { useRef, useState } from \"react\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\";\nimport loginImg from \"./login.svg\";\nimport \"./style.scss\";\n\nconst Login = () => {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to log in\")\n    }\n\n    setLoading(false)\n  }\n  return (\n    <div className=\"base-container\">\n      <div className=\"header \">Login</div>\n      <div className=\"content\">\n        <div className=\"image\">\n          <img src={loginImg} alt=\"login\" />\n        </div>\n        <div className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Email</label>\n            <input type=\"email\" name=\"email\" placeholder=\"email\" ref={emailRef} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" placeholder=\"password\" ref={passwordRef}/>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <button type=\"button\" className=\"btn\" onClick={handleSubmit}>\n          Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/user/Desktop/timer/src/components/login/Register.js",["63","64","65","66","67","68","69","70"],"import React, { useRef, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport loginImg from './login.svg';\nimport './style.scss';\nimport db from '../../firebase';\n\nconst Register = () => {\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const { setCurrentUser, currentUser, setFirstName, setLastName } = useAuth();\n  // const { uid, firstName, lastName } = currentUser;\n\n  function changeName() {\n    // setFirstName(firstNameRef.current.value);\n    // setLastName(lastNameRef.current.value);\n  }\n\n  async function handleSubmit(e) {\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      // setCurrentUser((prevUser) => ({\n      //   ...prevUser,\n      //   firstName: firstNameRef.current.value,\n      //   lastName: lastNameRef.current.value,\n      // }));\n      // setFirstName(firstNameRef.current.value);\n      // setLastName(lastNameRef.current.value);\n      // db.ref(`users/${uid}/userName/`).set({ firstName, lastName });\n      history.push('/');\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  }\n  return (\n    <div className=\"base-container\">\n      <div className=\"header register\">Register</div>\n      <div className=\"content\">\n        <div className=\"image\">\n          <img src={loginImg} alt=\"login\" />\n        </div>\n        <div className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"firstname\">Firstname</label>\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              placeholder=\"firstname\"\n              ref={firstNameRef}\n              onChange={changeName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastname\">Lastname</label>\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              placeholder=\"lastname\"\n              ref={lastNameRef}\n              onChange={changeName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"email\"\n              ref={emailRef}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"text\"\n              name=\"password\"\n              placeholder=\"password\"\n              ref={passwordRef}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <button type=\"button\" className=\"btn\" onClick={handleSubmit}>\n          Register\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/user/Desktop/timer/src/hooks/useTimer.js",["71","72","73","74"],"/Users/user/Desktop/timer/src/components/Home.js",[],"/Users/user/Desktop/timer/src/components/Stopwatch.js",["75","76"],"import React, { useState, useEffect } from 'react';\nimport db from '../firebase';\n\nconst Stopwatch = ({ view, start, uid }) => {\n  const [timer, setTimer] = useState('');\n  const [seconds, setSeconds] = useState(0);\n  const dbRef = db.ref(`users/${uid}/${view}/seconds`);\n\n  const formatTime = (seconds) => {\n    const getSeconds = `0${seconds % 60}`.slice(-2);\n    const minutes = `${Math.floor(seconds / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(seconds / 3600)}`.slice(-2);\n\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  useEffect(() => {\n    if (start) {\n      dbRef.once('value', (snapshot) => {\n        if (!snapshot.val()) {\n          dbRef.set(0);\n        } else {\n          setSeconds(snapshot.val());\n        }\n      });\n\n      dbRef.on('value', (snapshot) => {\n        setTimer(formatTime(snapshot.val()));\n      });\n    } else {\n      dbRef.on('value', (snapshot) => {\n        if (!snapshot.val()) {\n          setTimer('00:00:00');\n        } else {\n          setTimer(formatTime(snapshot.val()));\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (start) {\n      const interval = setInterval(() => {\n        setSeconds((seconds) => seconds + 1);\n        dbRef.set(seconds);\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"app\">\n      <h3>{view} Stopwatch</h3>\n      <div className=\"stopwatch-card\">\n        <p>{timer}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":15},{"ruleId":"81","severity":1,"message":"86","line":9,"column":11,"nodeType":"83","messageId":"84","endLine":9,"endColumn":22},{"ruleId":"81","severity":1,"message":"87","line":21,"column":18,"nodeType":"83","messageId":"84","endLine":21,"endColumn":30},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":11,"column":10,"nodeType":"83","messageId":"84","endLine":11,"endColumn":15},{"ruleId":"81","severity":1,"message":"88","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"89","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":10},{"ruleId":"81","severity":1,"message":"85","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":15},{"ruleId":"81","severity":1,"message":"88","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":17},{"ruleId":"81","severity":1,"message":"90","line":18,"column":11,"nodeType":"83","messageId":"84","endLine":18,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":18,"column":27,"nodeType":"83","messageId":"84","endLine":18,"endColumn":38},{"ruleId":"81","severity":1,"message":"91","line":18,"column":40,"nodeType":"83","messageId":"84","endLine":18,"endColumn":52},{"ruleId":"81","severity":1,"message":"92","line":18,"column":54,"nodeType":"83","messageId":"84","endLine":18,"endColumn":65},{"ruleId":"81","severity":1,"message":"93","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"94","line":2,"column":16,"nodeType":"83","messageId":"84","endLine":2,"endColumn":26},{"ruleId":"81","severity":1,"message":"95","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":40,"column":6,"nodeType":"98","endLine":40,"endColumn":8,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"97","line":51,"column":6,"nodeType":"98","endLine":51,"endColumn":15,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'handleLogout' is defined but never used.","'loading' is assigned a value but never used.","'db' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'React' is defined but never used.","'useHistory' is defined but never used.","'useAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dbRef' and 'start'. Either include them or remove the dependency array.","ArrayExpression",["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [dbRef, start]",{"range":"109","text":"110"},"Update the dependencies array to be: [dbRef, seconds, start]",{"range":"111","text":"112"},[1114,1116],"[dbRef, start]",[1346,1355],"[dbRef, seconds, start]"]